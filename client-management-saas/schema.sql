-- Creating clients table
CREATE TABLE clients (
  id NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  name VARCHAR2(255) NOT NULL,
  email VARCHAR2(255) NOT NULL UNIQUE,
  phone VARCHAR2(20),
  business_type VARCHAR2(50) CHECK (business_type IN ('self-employed', 'corporation')),
  address VARCHAR2(500),
  created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
  updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);

-- Creating alerts table
CREATE TABLE alerts (
  id NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  client_id NUMBER NOT NULL,
  title VARCHAR2(255) NOT NULL,
  description VARCHAR2(1000),
  due_date DATE NOT NULL,
  recurrence VARCHAR2(50) CHECK (recurrence IN ('one-time', 'monthly', 'quarterly', 'yearly')),
  notification_method VARCHAR2(50) CHECK (notification_method IN ('email', 'sms', 'both')),
  status VARCHAR2(50) CHECK (status IN ('pending', 'sent', 'dismissed')),
  created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
  updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
  CONSTRAINT fk_client FOREIGN KEY (client_id) REFERENCES clients(id)
);

-- Creating notifications table
CREATE TABLE notifications (
  id NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  alert_id NUMBER NOT NULL,
  client_id NUMBER NOT NULL,
  type VARCHAR2(50) CHECK (type IN ('email', 'sms')),
  content VARCHAR2(2000) NOT NULL,
  status VARCHAR2(50) CHECK (status IN ('sent', 'failed', 'pending')),
  sent_at TIMESTAMP,
  error_message VARCHAR2(1000),
  CONSTRAINT fk_alert FOREIGN KEY (alert_id) REFERENCES alerts(id),
  CONSTRAINT fk_client_notif FOREIGN KEY (client_id) REFERENCES clients(id)
);

-- Creating oauth_tokens table
CREATE TABLE oauth_tokens (
  id NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  user_id VARCHAR2(255) NOT NULL,
  provider VARCHAR2(50) NOT NULL CHECK (provider = 'gmail'),
  access_token VARCHAR2(4000) NOT NULL,
  refresh_token VARCHAR2(4000),
  expires_at TIMESTAMP NOT NULL
);

-- Creating indexes
CREATE INDEX idx_client_email ON clients(email);
CREATE INDEX idx_alert_due_date ON alerts(due_date);
CREATE INDEX idx_notification_status ON notifications(status);